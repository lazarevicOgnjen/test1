name: elfak bot

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Install system deps
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3

      # Install Python libs
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run main logic
      - name: Run bot script
        env:
          MAIL: ${{ secrets.MAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: python main.py

      # Check if any md files changed
      - name: Check for real changes
        id: changes
        run: |
          git add .
          if git diff --cached --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      # Commit only if real changes exist
      - name: Commit changes
        if: steps.changes.outputs.changed == 'true'
        uses: lazarevicOgnjen/git-auto-commit-action@v6
        with:
          commit_message: Update markdown
          file_pattern: "*.md"

      # Detect which exact files changed in the commit
      - name: Detect per-file changes
        id: detect
        if: steps.changes.outputs.changed == 'true'
        run: |
          for f in bp.md sp.md pj.md oopj.md lp.md oop.md aor1.md; do
            if git diff --name-only HEAD~1 HEAD | grep -q $f; then
              echo "${f%.md}_changed=true" >> $GITHUB_OUTPUT
            else
              echo "${f%.md}_changed=false" >> $GITHUB_OUTPUT
            fi
          done

      # Send notifications only for changed files
      - name: Notify BP
        if: steps.detect.outputs.bp_changed == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_MAIN }}
        run: python bp.py

      - name: Notify SP
        if: steps.detect.outputs.sp_changed == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_MAIN }}
        run: python sp.py

      - name: Notify PJ
        if: steps.detect.outputs.pj_changed == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_MAIN }}
        run: python pj.py

      - name: Notify OOPJ
        if: steps.detect.outputs.oopj_changed == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_MAIN }}
        run: python oopj.py

      - name: Notify LP
        if: steps.detect.outputs.lp_changed == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_MAIN }}
        run: python lp.py

      - name: Notify OOP
        if: steps.detect.outputs.oop_changed == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_MAIN }}
        run: python oop.py

      - name: Notify AOR1
        if: steps.detect.outputs.aor1_changed == 'true'
        env:
          WEBHOOK_MAIN: ${{ secrets.WEBHOOK_MAIN }}
        run: python aor1.py